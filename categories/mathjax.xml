<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frankie Liu Pages (Posts about mathjax)</title><link>http://www.frankliu.org/</link><description></description><atom:link href="http://www.frankliu.org/categories/mathjax.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2018 &lt;a href="mailto:frankie.y.liu@gmail.com"&gt;Frankie Liu&lt;/a&gt; </copyright><lastBuildDate>Sat, 20 Jan 2018 01:01:41 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>git head and branches</title><link>http://www.frankliu.org/posts/git-head-and-branches/</link><dc:creator>Frankie Liu</dc:creator><description>&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;code&gt;origin&lt;/code&gt; is a local alias to a remote repository&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;git push [origin|&amp;lt;URL&amp;gt;] &amp;lt;branch&amp;gt;&lt;/code&gt; pushes changes to a particular
remote repository
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote -v&lt;/code&gt; find out information about remote
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote show origin&lt;/code&gt; shows the origin
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add origin &amp;lt;URL&amp;gt;&lt;/code&gt; sets an origin
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote rename origin &amp;lt;new_name&amp;gt;&lt;/code&gt; renames the origin
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;code&gt;HEAD&lt;/code&gt; &lt;code&gt;@&lt;/code&gt; is a pointer to a branch&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;img src="http://www.frankliu.org/images/git/git-graph.svg" alt="Difference between carot and tilde"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
Image from &lt;a href="http://www.paulboxley.com/blog/2011/06/git-caret-and-tilde"&gt;paulboxley&lt;/a&gt;.
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;The &lt;code&gt;@&lt;/code&gt; at-sign without leading branch/reference is the same as &lt;code&gt;HEAD&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;code&gt;branch&lt;/code&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;git branch &amp;lt;branch name&amp;gt;&lt;/code&gt; create a branch
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout &amp;lt;branch name&amp;gt;&lt;/code&gt; move HEAD to that branch
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout -b &amp;lt;branch name&amp;gt;&lt;/code&gt; create branch and move HEAD to it
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout master&lt;/code&gt; return to the master branch
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge &amp;lt;branch name&amp;gt;&lt;/code&gt; merges checked out branch (typically
master) with another branch
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -d &amp;lt;branch name&amp;gt;&lt;/code&gt; removes a branch
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git mergetool&lt;/code&gt; optional tool to visually merge
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -a&lt;/code&gt; show all branches
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -v&lt;/code&gt; see last commit
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -vv&lt;/code&gt; see tracking information
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch --no-merged&lt;/code&gt; see the branches that have not merged
with checked out branch (typically master)
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff origin/master..master&lt;/code&gt; show differences between local
master and origin's master
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;Working with remote references&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;git ls-remote&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git ls-remote origin master&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git fetch origin&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote add &amp;lt;remote_name&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git fetch &amp;lt;remote_name&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin &amp;lt;branch_name&amp;gt;&lt;/code&gt; shortcut for
&lt;code&gt;git push origin &amp;lt;bn&amp;gt;:&amp;lt;bn&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git merge origin/&amp;lt;bn&amp;gt;&lt;/code&gt; merges current working branch
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout -b &amp;lt;bn&amp;gt; origin/&amp;lt;bn&amp;gt;&lt;/code&gt; create local branch &lt;code&gt;&amp;lt;bn&amp;gt;&lt;/code&gt; based
off &lt;code&gt;origin/&amp;lt;bn&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout --track origin/&amp;lt;bn&amp;gt;&lt;/code&gt; shorthand for the above
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout &amp;lt;bn&amp;gt;&lt;/code&gt; shorthand for the above if &lt;code&gt;&amp;lt;bn&amp;gt;&lt;/code&gt; exists on origin
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin --delete &amp;lt;bn&amp;gt;&lt;/code&gt; delete a remote branch
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;Workflow&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;git checkout -b &amp;lt;myworkingbranch&amp;gt; --track origin/master&lt;/code&gt; create a
local branch
&lt;/li&gt;
&lt;li&gt;~git config –global alias.nb "!git checkout –track $(git config
branch.$(git rev-parge –abbrev-ref HEAD).remote)/$(git rev-parse –abrev-ref HEAD) -b"~
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git nb foobar&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.github.com/"&gt;hub&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;&lt;code&gt;alias&lt;/code&gt;&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Set an alias for an alias command
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global alias.alias "config --get-regexp ^alias\."
&lt;/pre&gt;&lt;/div&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;code&gt;git alias&lt;/code&gt; : use the alias command
&lt;/li&gt;

&lt;li&gt;Set an alias for alog
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global alias.alog "log --graph --oneline --all --decorate"
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;Unstaging&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Suppose you did the following &lt;code&gt;git add -A&lt;/code&gt;, i.e. added all modifications
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/code&gt; you can unstage them individually
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset&lt;/code&gt; or unstage all the modifications
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;Undoing things&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://sethrobertson.github.io/GitFixUm/fixup.html"&gt;fix human errors&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;~git commit -m "some typo"~ want to undo this commit
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git reset HEAD~&lt;/code&gt; unstages your commit
&lt;/li&gt;
&lt;li&gt;make corrections
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add ...&lt;/code&gt; stage them
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -c ORIG_HEAD&lt;/code&gt; allows you to edit the old commit message
&lt;code&gt;ORIG_HEAD&lt;/code&gt; is the original head
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git revert HEAD&lt;/code&gt; undoes a public commit
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/927358/how-to-undo-the-most-recent-commits-in-git?page=1&amp;amp;tab=votes#tab-top"&gt;nice read&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/1223354/undo-git-pull-how-to-bring-repos-to-old-state"&gt;another stackoverflow&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-9" class="outline-2"&gt;
&lt;h2 id="sec-9"&gt;&lt;a href="https://github.com/tj/git-extras"&gt;git-extras&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;</description><category>git</category><category>mathjax</category><guid>http://www.frankliu.org/posts/git-head-and-branches/</guid><pubDate>Fri, 19 Jan 2018 16:11:56 GMT</pubDate></item></channel></rss>